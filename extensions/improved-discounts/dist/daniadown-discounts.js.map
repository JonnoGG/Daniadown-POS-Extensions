{
  "version": 3,
  "sources": ["../../../node_modules/@shopify/retail-ui-extensions/build/esm/extend.mjs", "../../../node_modules/@remote-ui/core/build/esm/component.mjs", "../../../node_modules/@remote-ui/core/build/esm/index.mjs", "../../../node_modules/@remote-ui/core/index.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/components/Tile/Tile.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/components/Button/Button.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/components/Stack/Stack.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/components/ScrollView/ScrollView.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/components/Screen/Screen.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/index.mjs", "../../../node_modules/@shopify/retail-ui-extensions/index.mjs", "../src/index.ts", "<stdin>"],
  "sourceRoot": "/Users/jonathangilberg/Documents/Code/Shopify/daniadown-extensions/extensions/improved-discounts/src",
  "sourcesContent": ["/**\n * The most important API to a UI extension is `shopify`,\n * an object that is globally available.\n * This object has a single method, extend. extend takes two arguments:\n * the name of an available extension point, and a function to call when Shopify\n * is ready to run the extension point.\n */\nconst extend = (...args) => globalThis.shopify.extend(...args);\n\nexport { extend };\n", "function createRemoteComponent(componentType) {\n  return componentType;\n}\n\nexport { createRemoteComponent };\n", "export { release, retain } from '@remote-ui/rpc';\nexport { createRemoteComponent } from './component.mjs';\nexport { ACTION_INSERT_CHILD, ACTION_MOUNT, ACTION_REMOVE_CHILD, ACTION_UPDATE_PROPS, ACTION_UPDATE_TEXT, KIND_COMPONENT, KIND_FRAGMENT, KIND_ROOT, KIND_TEXT } from './types.mjs';\nexport { createRemoteRoot } from './root.mjs';\nexport { createRemoteChannel, createRemoteReceiver, isRemoteFragmentSerialization, isRemoteReceiverAttachableFragment } from './receiver.mjs';\nexport { isRemoteComponent, isRemoteFragment, isRemoteText } from './utilities.mjs';\n", "export * from \"./build/esm/index.mjs\";", "import { createRemoteComponent } from '@remote-ui/core';\n\nconst Tile = createRemoteComponent('Tile');\n\nexport { Tile };\n", "import { createRemoteComponent } from '@remote-ui/core';\n\nconst Button = createRemoteComponent('Button');\n\nexport { Button };\n", "import { createRemoteComponent } from '@remote-ui/core';\n\nconst Stack = createRemoteComponent('Stack');\n\nexport { Stack };\n", "import { createRemoteComponent } from '@remote-ui/core';\n\nconst ScrollView = createRemoteComponent('ScrollView');\n\nexport { ScrollView };\n", "import { createRemoteComponent } from '@remote-ui/core';\n\n/** Represents the presentation of a screen in the navigation stack.\n * @property `sheet` displays the screen from the bottom on `navigate` when `true`.\n */\n\nconst Screen = createRemoteComponent('Screen');\n\nexport { Screen };\n", "export { extend } from './extend.mjs';\nexport { makeStatefulSubscribable } from '@remote-ui/async-subscription';\nexport { CountryCode } from './extension-api/types/country-code.mjs';\nexport { Text } from './components/Text/Text.mjs';\nexport { Tile } from './components/Tile/Tile.mjs';\nexport { Banner } from './components/Banner/Banner.mjs';\nexport { Button } from './components/Button/Button.mjs';\nexport { CameraScanner } from './components/CameraScanner/CameraScanner.mjs';\nexport { DateField } from './components/DateField/DateField.mjs';\nexport { DatePicker } from './components/DatePicker/DatePicker.mjs';\nexport { EmailField } from './components/EmailField/EmailField.mjs';\nexport { NumberField } from './components/NumberField/NumberField.mjs';\nexport { Section } from './components/Section/Section.mjs';\nexport { Selectable } from './components/Selectable/Selectable.mjs';\nexport { Stack } from './components/Stack/Stack.mjs';\nexport { TextArea } from './components/TextArea/TextArea.mjs';\nexport { TextField } from './components/TextField/TextField.mjs';\nexport { FormattedTextField } from './components/FormattedTextField/FormattedTextField.mjs';\nexport { List } from './components/List/List.mjs';\nexport { PinPad } from './components/PinPad/PinPad.mjs';\nexport { SegmentedControl } from './components/SegmentedControl/SegmentedControl.mjs';\nexport { Badge } from './components/Badge/Badge.mjs';\nexport { Stepper } from './components/Stepper/Stepper.mjs';\nexport { ScrollView } from './components/ScrollView/ScrollView.mjs';\nexport { Dialog } from './components/Dialog/Dialog.mjs';\nexport { SearchBar } from './components/SearchBar/SearchBar.mjs';\nexport { Image } from './components/Image/Image.mjs';\nexport { RadioButtonList } from './components/RadioButtonList/RadioButtonList.mjs';\nexport { Icon } from './components/Icon/Icon.mjs';\nexport { Screen } from './components/Screen/Screen.mjs';\nexport { TimeField } from './components/TimeField/TimeField.mjs';\nexport { TimePicker } from './components/TimePicker/TimePicker.mjs';\nexport { Navigator } from './components/Navigator/Navigator.mjs';\n", "export * from \"./build/esm/index.mjs\";", "import {\n    extend,\n    Screen,\n    Tile,\n    Button,\n    DiscountType,\n    ScrollView,\n    SetLineItemDiscountInput,\n    Stack,\n} from \"@shopify/retail-ui-extensions\";\n\nextend(\"pos.home.tile.render\", (root, api) => {\n    const shouldEnable = (subtotal: string, customer: any): boolean => {\n        // always enabled during brentwood closing sale, uncomment below line when removing brentwood button\n        return Boolean(Number(subtotal) && customer);\n        //return true; //comment out when brentwood sale is over\n    };\n\n    const updateInstructionMsg = (subtotal: string, customer: any): string => {\n        if (Number(subtotal) && customer) {\n            return \"Employee & designer discounts.\";\n        } else if (Number(subtotal)) {\n            return \"Employee & designer discounts.\\nPlease add customer.\";\n        } else if (customer) {\n            return \"Employee & designer discounts.\\nPlease add products.\";\n        } else {\n            return \"Employee & designer discounts.\\nPlease add products & customer.\";\n        }\n    };\n\n    // You can use the initial cart value to set up state\n    const tile = root.createComponent(Tile, {\n        title: \"DD Discounts\",\n        subtitle: \"Employee & designer discounts.\\nPlease add products & customer.\",\n        enabled: shouldEnable(api.cart.subscribable.initial.subtotal, api.cart.subscribable.initial.customer),\n        onPress: api.smartGrid.presentModal,\n    });\n\n    // You can subscribe to changes in the cart to mutate state\n    api.cart.subscribable.subscribe((cart) => {\n        tile.updateProps({ enabled: shouldEnable(cart.subtotal, cart.customer) });\n        tile.updateProps({ subtitle: updateInstructionMsg(cart.subtotal, cart.customer) });\n        //tile.updateProps();\n    });\n    root.appendChild(tile);\n    root.mount();\n});\n\nextend(\"pos.home.modal.render\", (root, api) => {\n    //Checks if the passed customer is a designer or employee\n    const checkCustomerPrivilege = (customer: any, privilegeToCheck: string) => {\n        if (customer.firstName.startsWith(privilegeToCheck)) {\n            return true;\n        }\n        return false;\n    };\n    //Function to apply the discounts to the cart\n    const updateDiscounts = async (title: string, maxDiscount: number) => {\n        const items = api.cart.subscribable.initial.lineItems;\n        const variantIds = items.map((item) => item.variantId!);\n        const lineItemIdsQuants = items.map((item) => ({ id: item.uuid, qauntity: item.quantity }));\n\n        //get variant details from Shopify Admin (need the compare-at-price)\n        const response = await api.productSearch.fetchProductVariantsWithIds(variantIds);\n        const variants = await response.fetchedResources;\n\n        let LineItemDiscounts: any[] = [];\n\n        //Loop through items in cart to calculate how much of a discount to apply\n        for (let i = 0; i < variants.length; i++) {\n            let fixedDiscountAmount: string;\n            const price = Number(variants[i].price);\n            const compAtPrice = Number(variants[i].compareAtPrice);\n            const calculatedPrice = compAtPrice * (1 - maxDiscount);\n\n            //find lineItem Uuid for current variantId\n            const lineItemIndex = variantIds.indexOf(variants[i].id);\n            const lineItemId = lineItemIdsQuants[lineItemIndex].id;\n            const lineItemQuant = lineItemIdsQuants[lineItemIndex].qauntity;\n\n            //Compare price and compare at price to determine how much discount to apply to get to \"maxDiscount\" value\n            if (compAtPrice == null || compAtPrice == 0) {\n                fixedDiscountAmount = (price * maxDiscount * lineItemQuant).toFixed(2);\n            } else if (price > calculatedPrice) {\n                fixedDiscountAmount = ((price - calculatedPrice) * lineItemQuant).toFixed(2);\n            } else {\n                continue;\n            }\n            //Set up LineItemsDiscounts obbject for api call to set discounts\n            const LineItemDiscount = {\n                title: title,\n                type: \"FixedAmount\",\n                amount: fixedDiscountAmount,\n                test: \"hello\",\n            };\n\n            const SetLineItemDiscountInput = {\n                lineItemUuid: String(lineItemId),\n                lineItemDiscount: LineItemDiscount,\n            };\n            LineItemDiscounts.push(SetLineItemDiscountInput);\n        }\n        console.log(LineItemDiscounts);\n        //API call to bulk set the line item discounts\n        try {\n            api.cart.bulkSetLineItemDiscounts(LineItemDiscounts);\n            api.toast.show(\"Discount applied.\", { duration: 3000 });\n        } catch (err) {\n            console.log(err);\n        }\n    };\n    //Text at top of modal\n    let mainScreen = root.createComponent(Screen, {\n        name: \"Discounts\",\n        title: \"Available Discounts\",\n    });\n    let scrollView = root.createComponent(ScrollView);\n\n    //Create button for designer discount\n    const designerDiscountBtn = root.createComponent(Button, {\n        title: \"Designer Discount - 25% off MSRP\",\n        onPress: () => {\n            if (\n                checkCustomerPrivilege(api.cart.subscribable.initial.customer, \"DES -\") ||\n                checkCustomerPrivilege(api.cart.subscribable.initial.customer, \"DES-\")\n            ) {\n                updateDiscounts(\"Designer Discount\", 0.25);\n            } else {\n                api.toast.show(\"Customer does not have designer privileges.\", { duration: 3000 });\n            }\n        },\n    });\n\n    const employeeDiscountBtn = root.createComponent(Button, {\n        title: \"Employee Discount - 30% off MSRP\",\n        onPress: () => {\n            if (\n                checkCustomerPrivilege(api.cart.subscribable.initial.customer, \"EMP -\") ||\n                checkCustomerPrivilege(api.cart.subscribable.initial.customer, \"EMP-\")\n            ) {\n                updateDiscounts(\"Employee Discount\", 0.3);\n            } else {\n                api.toast.show(\"Customer does not have employee privileges.\", { duration: 3000 });\n            }\n        },\n    });\n\n    // const brentwoodDiscountBtn = root.createComponent(Button, {\n    //     title: \"Brentwood Closing Sale - 30% off MSRP\",\n    //     onPress: () => {\n    //         updateDiscounts(\"Closing Sale\", 0.3);\n    //     },\n    // });\n\n    const buttonStack = root.createComponent(Stack, {\n        direction: \"vertical\",\n    });\n\n    //Add components to modal\n    scrollView.appendChild(buttonStack);\n    buttonStack.appendChild(designerDiscountBtn);\n    buttonStack.appendChild(employeeDiscountBtn);\n    // Comment out below when brentwood sale is over\n    //buttonStack.appendChild(brentwoodDiscountBtn);\n    mainScreen.appendChild(scrollView);\n    root.appendChild(mainScreen);\n    root.mount();\n});\n", "import './src/index.ts';"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAOM;AAPN;AAAA;AAOA,MAAM,SAAS,IAAI,SAAS,WAAW,QAAQ,OAAO,GAAG,IAAI;AAAA;AAAA;;;ACP7D,WAAS,sBAAsB,eAAe;AAC5C,WAAO;AAAA,EACT;AAFA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA,MAEM;AAFN;AAAA;AAAA;AAEA,MAAM,OAAO,sBAAsB,MAAM;AAAA;AAAA;;;ACFzC,MAEM;AAFN;AAAA;AAAA;AAEA,MAAM,SAAS,sBAAsB,QAAQ;AAAA;AAAA;;;ACF7C,MAEM;AAFN;AAAA;AAAA;AAEA,MAAM,QAAQ,sBAAsB,OAAO;AAAA;AAAA;;;ACF3C,MAEM;AAFN;AAAA;AAAA;AAEA,MAAM,aAAa,sBAAsB,YAAY;AAAA;AAAA;;;ACFrD,MAMM;AANN;AAAA;AAAA;AAMA,MAAM,SAAS,sBAAsB,QAAQ;AAAA;AAAA;;;ACN7C,MAAAA,YAAA;AAAA;AAAA;AAIA;AAEA;AAQA;AASA;AAMA;AAAA;AAAA;;;AC7BA;AAAA;AAAA,MAAAC;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAWA,aAAO,wBAAwB,CAAC,MAAM,QAAQ;AAC1C,cAAM,eAAe,CAAC,UAAkB,aAA2B;AAE/D,iBAAO,QAAQ,OAAO,QAAQ,KAAK,QAAQ;AAAA,QAE/C;AAEA,cAAM,uBAAuB,CAAC,UAAkB,aAA0B;AACtE,cAAI,OAAO,QAAQ,KAAK,UAAU;AAC9B,mBAAO;AAAA,UACX,WAAW,OAAO,QAAQ,GAAG;AACzB,mBAAO;AAAA,UACX,WAAW,UAAU;AACjB,mBAAO;AAAA,UACX,OAAO;AACH,mBAAO;AAAA,UACX;AAAA,QACJ;AAGA,cAAM,OAAO,KAAK,gBAAgB,MAAM;AAAA,UACpC,OAAO;AAAA,UACP,UAAU;AAAA,UACV,SAAS,aAAa,IAAI,KAAK,aAAa,QAAQ,UAAU,IAAI,KAAK,aAAa,QAAQ,QAAQ;AAAA,UACpG,SAAS,IAAI,UAAU;AAAA,QAC3B,CAAC;AAGD,YAAI,KAAK,aAAa,UAAU,CAAC,SAAS;AACtC,eAAK,YAAY,EAAE,SAAS,aAAa,KAAK,UAAU,KAAK,QAAQ,EAAE,CAAC;AACxE,eAAK,YAAY,EAAE,UAAU,qBAAqB,KAAK,UAAU,KAAK,QAAQ,EAAE,CAAC;AAAA,QAErF,CAAC;AACD,aAAK,YAAY,IAAI;AACrB,aAAK,MAAM;AAAA,MACf,CAAC;AAED,aAAO,yBAAyB,CAAC,MAAM,QAAQ;AAE3C,cAAM,yBAAyB,CAAC,UAAe,qBAA6B;AACxE,cAAI,SAAS,UAAU,WAAW,gBAAgB,GAAG;AACjD,mBAAO;AAAA,UACX;AACA,iBAAO;AAAA,QACX;AAEA,cAAM,kBAAkB,CAAO,OAAe,gBAAwB;AAClE,gBAAM,QAAQ,IAAI,KAAK,aAAa,QAAQ;AAC5C,gBAAM,aAAa,MAAM,IAAI,CAAC,SAAS,KAAK,SAAU;AACtD,gBAAM,oBAAoB,MAAM,IAAI,CAAC,UAAU,EAAE,IAAI,KAAK,MAAM,UAAU,KAAK,SAAS,EAAE;AAG1F,gBAAM,WAAW,MAAM,IAAI,cAAc,4BAA4B,UAAU;AAC/E,gBAAM,WAAW,MAAM,SAAS;AAEhC,cAAI,oBAA2B,CAAC;AAGhC,mBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACtC,gBAAI;AACJ,kBAAM,QAAQ,OAAO,SAAS,CAAC,EAAE,KAAK;AACtC,kBAAM,cAAc,OAAO,SAAS,CAAC,EAAE,cAAc;AACrD,kBAAM,kBAAkB,eAAe,IAAI;AAG3C,kBAAM,gBAAgB,WAAW,QAAQ,SAAS,CAAC,EAAE,EAAE;AACvD,kBAAM,aAAa,kBAAkB,aAAa,EAAE;AACpD,kBAAM,gBAAgB,kBAAkB,aAAa,EAAE;AAGvD,gBAAI,eAAe,QAAQ,eAAe,GAAG;AACzC,qCAAuB,QAAQ,cAAc,eAAe,QAAQ,CAAC;AAAA,YACzE,WAAW,QAAQ,iBAAiB;AAChC,sCAAwB,QAAQ,mBAAmB,eAAe,QAAQ,CAAC;AAAA,YAC/E,OAAO;AACH;AAAA,YACJ;AAEA,kBAAM,mBAAmB;AAAA,cACrB;AAAA,cACA,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,MAAM;AAAA,YACV;AAEA,kBAAMC,4BAA2B;AAAA,cAC7B,cAAc,OAAO,UAAU;AAAA,cAC/B,kBAAkB;AAAA,YACtB;AACA,8BAAkB,KAAKA,yBAAwB;AAAA,UACnD;AACA,kBAAQ,IAAI,iBAAiB;AAE7B,cAAI;AACA,gBAAI,KAAK,yBAAyB,iBAAiB;AACnD,gBAAI,MAAM,KAAK,qBAAqB,EAAE,UAAU,IAAK,CAAC;AAAA,UAC1D,SAAS,KAAK;AACV,oBAAQ,IAAI,GAAG;AAAA,UACnB;AAAA,QACJ;AAEA,YAAI,aAAa,KAAK,gBAAgB,QAAQ;AAAA,UAC1C,MAAM;AAAA,UACN,OAAO;AAAA,QACX,CAAC;AACD,YAAI,aAAa,KAAK,gBAAgB,UAAU;AAGhD,cAAM,sBAAsB,KAAK,gBAAgB,QAAQ;AAAA,UACrD,OAAO;AAAA,UACP,SAAS,MAAM;AACX,gBACI,uBAAuB,IAAI,KAAK,aAAa,QAAQ,UAAU,OAAO,KACtE,uBAAuB,IAAI,KAAK,aAAa,QAAQ,UAAU,MAAM,GACvE;AACE,8BAAgB,qBAAqB,IAAI;AAAA,YAC7C,OAAO;AACH,kBAAI,MAAM,KAAK,+CAA+C,EAAE,UAAU,IAAK,CAAC;AAAA,YACpF;AAAA,UACJ;AAAA,QACJ,CAAC;AAED,cAAM,sBAAsB,KAAK,gBAAgB,QAAQ;AAAA,UACrD,OAAO;AAAA,UACP,SAAS,MAAM;AACX,gBACI,uBAAuB,IAAI,KAAK,aAAa,QAAQ,UAAU,OAAO,KACtE,uBAAuB,IAAI,KAAK,aAAa,QAAQ,UAAU,MAAM,GACvE;AACE,8BAAgB,qBAAqB,GAAG;AAAA,YAC5C,OAAO;AACH,kBAAI,MAAM,KAAK,+CAA+C,EAAE,UAAU,IAAK,CAAC;AAAA,YACpF;AAAA,UACJ;AAAA,QACJ,CAAC;AASD,cAAM,cAAc,KAAK,gBAAgB,OAAO;AAAA,UAC5C,WAAW;AAAA,QACf,CAAC;AAGD,mBAAW,YAAY,WAAW;AAClC,oBAAY,YAAY,mBAAmB;AAC3C,oBAAY,YAAY,mBAAmB;AAG3C,mBAAW,YAAY,UAAU;AACjC,aAAK,YAAY,UAAU;AAC3B,aAAK,MAAM;AAAA,MACf,CAAC;AAAA;AAAA;;;ACvKD,mBAAO;",
  "names": ["init_esm", "init_esm", "SetLineItemDiscountInput"]
}
