{
  "version": 3,
  "sources": ["../../../node_modules/@shopify/retail-ui-extensions/build/esm/extend.mjs", "../../../node_modules/@remote-ui/core/build/esm/component.mjs", "../../../node_modules/@remote-ui/core/build/esm/index.mjs", "../../../node_modules/@remote-ui/core/index.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/components/Tile/Tile.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/components/Button/Button.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/components/ScrollView/ScrollView.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/components/Screen/Screen.mjs", "../../../node_modules/@shopify/retail-ui-extensions/build/esm/index.mjs", "../../../node_modules/@shopify/retail-ui-extensions/index.mjs", "../src/index.ts", "<stdin>"],
  "sourceRoot": "/Users/jonathangilberg/Documents/Code/Shopify/daniadown-extensions/extensions/improved-discounts/src",
  "sourcesContent": ["/**\n * The most important API to a UI extension is `shopify`,\n * an object that is globally available.\n * This object has a single method, extend. extend takes two arguments:\n * the name of an available extension point, and a function to call when Shopify\n * is ready to run the extension point.\n */\nconst extend = (...args) => globalThis.shopify.extend(...args);\n\nexport { extend };\n", "function createRemoteComponent(componentType) {\n  return componentType;\n}\n\nexport { createRemoteComponent };\n", "export { release, retain } from '@remote-ui/rpc';\nexport { createRemoteComponent } from './component.mjs';\nexport { ACTION_INSERT_CHILD, ACTION_MOUNT, ACTION_REMOVE_CHILD, ACTION_UPDATE_PROPS, ACTION_UPDATE_TEXT, KIND_COMPONENT, KIND_FRAGMENT, KIND_ROOT, KIND_TEXT } from './types.mjs';\nexport { createRemoteRoot } from './root.mjs';\nexport { createRemoteChannel, createRemoteReceiver, isRemoteFragmentSerialization, isRemoteReceiverAttachableFragment } from './receiver.mjs';\nexport { isRemoteComponent, isRemoteFragment, isRemoteText } from './utilities.mjs';\n", "export * from \"./build/esm/index.mjs\";", "import { createRemoteComponent } from '@remote-ui/core';\n\nconst Tile = createRemoteComponent('Tile');\n\nexport { Tile };\n", "import { createRemoteComponent } from '@remote-ui/core';\n\nconst Button = createRemoteComponent('Button');\n\nexport { Button };\n", "import { createRemoteComponent } from '@remote-ui/core';\n\nconst ScrollView = createRemoteComponent('ScrollView');\n\nexport { ScrollView };\n", "import { createRemoteComponent } from '@remote-ui/core';\n\n/** Represents the presentation of a screen in the navigation stack.\n * @property `sheet` displays the screen from the bottom on `navigate` when `true`.\n */\n\nconst Screen = createRemoteComponent('Screen');\n\nexport { Screen };\n", "export { extend } from './extend.mjs';\nexport { makeStatefulSubscribable } from '@remote-ui/async-subscription';\nexport { CountryCode } from './extension-api/types/country-code.mjs';\nexport { Text } from './components/Text/Text.mjs';\nexport { Tile } from './components/Tile/Tile.mjs';\nexport { Banner } from './components/Banner/Banner.mjs';\nexport { Button } from './components/Button/Button.mjs';\nexport { CameraScanner } from './components/CameraScanner/CameraScanner.mjs';\nexport { DateField } from './components/DateField/DateField.mjs';\nexport { DatePicker } from './components/DatePicker/DatePicker.mjs';\nexport { EmailField } from './components/EmailField/EmailField.mjs';\nexport { NumberField } from './components/NumberField/NumberField.mjs';\nexport { Section } from './components/Section/Section.mjs';\nexport { Selectable } from './components/Selectable/Selectable.mjs';\nexport { Stack } from './components/Stack/Stack.mjs';\nexport { TextArea } from './components/TextArea/TextArea.mjs';\nexport { TextField } from './components/TextField/TextField.mjs';\nexport { FormattedTextField } from './components/FormattedTextField/FormattedTextField.mjs';\nexport { List } from './components/List/List.mjs';\nexport { PinPad } from './components/PinPad/PinPad.mjs';\nexport { SegmentedControl } from './components/SegmentedControl/SegmentedControl.mjs';\nexport { Badge } from './components/Badge/Badge.mjs';\nexport { Stepper } from './components/Stepper/Stepper.mjs';\nexport { ScrollView } from './components/ScrollView/ScrollView.mjs';\nexport { Dialog } from './components/Dialog/Dialog.mjs';\nexport { SearchBar } from './components/SearchBar/SearchBar.mjs';\nexport { Image } from './components/Image/Image.mjs';\nexport { RadioButtonList } from './components/RadioButtonList/RadioButtonList.mjs';\nexport { Icon } from './components/Icon/Icon.mjs';\nexport { Screen } from './components/Screen/Screen.mjs';\nexport { TimeField } from './components/TimeField/TimeField.mjs';\nexport { TimePicker } from './components/TimePicker/TimePicker.mjs';\nexport { Navigator } from './components/Navigator/Navigator.mjs';\n", "export * from \"./build/esm/index.mjs\";", "import {\n  extend,\n  Screen,\n  Tile,\n  Button,\n  DiscountType,\n  ScrollView,\n  SetLineItemDiscountInput,\n} from \"@shopify/retail-ui-extensions\";\n\nextend(\"pos.home.tile.render\", (root, api) => {\n  const shouldEnable = (subtotal: string): boolean => {\n    return Number(subtotal) > 100;\n  };\n\n  // You can use the initial cart value to set up state\n  const tile = root.createComponent(Tile, {\n    title: \"DD Discounts\",\n    subtitle: \"Employee & designer discounts\",\n    enabled: shouldEnable(api.cart.subscribable.initial.subtotal),\n    onPress: api.smartGrid.presentModal,\n  });\n\n  // You can subscribe to changes in the cart to mutate state\n  api.cart.subscribable.subscribe((cart) => {\n    tile.updateProps({ enabled: Number(cart.subtotal) > 0 });\n  });\n  root.appendChild(tile);\n  root.mount();\n});\n\nextend(\"pos.home.modal.render\", (root, api) => {\n  //Function to apply the discounts to the cart\n  const updateDiscounts = async (title: string, maxDiscount: number) => {\n    let items = api.cart.subscribable.initial.lineItems;\n    let variantIds = items.map((item) => item.variantId!);\n    let lineItemIdsQuants = items.map((item) => ({ id: item.uuid, qauntity: item.quantity }));\n\n    //get variant details from Shopify Admin (need the compare-at-price)\n    const response = await api.productSearch.fetchProductVariantsWithIds(variantIds);\n    const variants = await response.fetchedResources;\n\n    let LineItemDiscounts: any[] = [];\n\n    //Loop through items in cart to calculate how much of a discount to apply\n    for (let i = 0; i < variants.length; i++) {\n      let fixedDiscountAmount: string;\n      const price = Number(variants[i].price);\n      const compAtPrice = Number(variants[i].compareAtPrice);\n      const calculatedPrice = compAtPrice * (1 - maxDiscount);\n\n      //find lineItem Uuid for current variantId\n      const lineItemIndex = variantIds.indexOf(variants[i].id);\n      const lineItemId = lineItemIdsQuants[lineItemIndex].id;\n      const lineItemQuant = lineItemIdsQuants[lineItemIndex].qauntity;\n\n      //Compare price and compare at price to determine how much discount to apply to get to \"maxDiscount\" value\n      if (compAtPrice == null || compAtPrice == 0) {\n        fixedDiscountAmount = (price * maxDiscount * lineItemQuant).toFixed(2);\n      } else if (price > calculatedPrice) {\n        fixedDiscountAmount = ((price - calculatedPrice) * lineItemQuant).toFixed(2);\n      } else {\n        continue;\n      }\n      //Set up LineItemsDiscounts obbject for api call to set discounts\n      const LineItemDiscount = {\n        title: title,\n        type: \"FixedAmount\",\n        amount: fixedDiscountAmount,\n        test: \"hello\",\n      };\n\n      const SetLineItemDiscountInput = {\n        lineItemUuid: String(lineItemId),\n        lineItemDiscount: LineItemDiscount,\n      };\n      LineItemDiscounts.push(SetLineItemDiscountInput);\n    }\n    console.log(LineItemDiscounts);\n    //API call to bulk set the line item discounts\n    try {\n      api.cart.bulkSetLineItemDiscounts(LineItemDiscounts);\n      api.toast.show(\"Discount applied.\", { duration: 3000 });\n    } catch (err) {\n      console.log(err);\n    }\n  };\n  //Text at top of modal\n  let mainScreen = root.createComponent(Screen, {\n    name: \"Discounts\",\n    title: \"Available Discounts\",\n  });\n  let scrollView = root.createComponent(ScrollView);\n\n  //Create button for designer discount\n  const designerDiscountBtn = root.createComponent(Button, {\n    title: \"Designer Discount - 25% off MSRP\",\n    onPress: () => {\n      updateDiscounts(\"Designer Discount\", 0.25);\n    },\n  });\n\n  //Add components to modal\n  scrollView.appendChild(designerDiscountBtn);\n  mainScreen.appendChild(scrollView);\n  root.appendChild(mainScreen);\n  root.mount();\n});\n", "import './src/index.ts';"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,MAOM;AAPN;AAAA;AAOA,MAAM,SAAS,IAAI,SAAS,WAAW,QAAQ,OAAO,GAAG,IAAI;AAAA;AAAA;;;ACP7D,WAAS,sBAAsB,eAAe;AAC5C,WAAO;AAAA,EACT;AAFA;AAAA;AAAA;AAAA;;;ACAA;AAAA;AACA;AAAA;AAAA;;;ACDA;AAAA;AAAA;AAAA;AAAA;;;ACAA,MAEM;AAFN;AAAA;AAAA;AAEA,MAAM,OAAO,sBAAsB,MAAM;AAAA;AAAA;;;ACFzC,MAEM;AAFN;AAAA;AAAA;AAEA,MAAM,SAAS,sBAAsB,QAAQ;AAAA;AAAA;;;ACF7C,MAEM;AAFN;AAAA;AAAA;AAEA,MAAM,aAAa,sBAAsB,YAAY;AAAA;AAAA;;;ACFrD,MAMM;AANN;AAAA;AAAA;AAMA,MAAM,SAAS,sBAAsB,QAAQ;AAAA;AAAA;;;ACN7C,MAAAA,YAAA;AAAA;AAAA;AAIA;AAEA;AAiBA;AAMA;AAAA;AAAA;;;AC7BA;AAAA;AAAA,MAAAC;AAAA;AAAA;;;ACAA;AAAA;AAAA;AAUA,aAAO,wBAAwB,CAAC,MAAM,QAAQ;AAC5C,cAAM,eAAe,CAAC,aAA8B;AAClD,iBAAO,OAAO,QAAQ,IAAI;AAAA,QAC5B;AAGA,cAAM,OAAO,KAAK,gBAAgB,MAAM;AAAA,UACtC,OAAO;AAAA,UACP,UAAU;AAAA,UACV,SAAS,aAAa,IAAI,KAAK,aAAa,QAAQ,QAAQ;AAAA,UAC5D,SAAS,IAAI,UAAU;AAAA,QACzB,CAAC;AAGD,YAAI,KAAK,aAAa,UAAU,CAAC,SAAS;AACxC,eAAK,YAAY,EAAE,SAAS,OAAO,KAAK,QAAQ,IAAI,EAAE,CAAC;AAAA,QACzD,CAAC;AACD,aAAK,YAAY,IAAI;AACrB,aAAK,MAAM;AAAA,MACb,CAAC;AAED,aAAO,yBAAyB,CAAC,MAAM,QAAQ;AAE7C,cAAM,kBAAkB,CAAO,OAAe,gBAAwB;AACpE,cAAI,QAAQ,IAAI,KAAK,aAAa,QAAQ;AAC1C,cAAI,aAAa,MAAM,IAAI,CAAC,SAAS,KAAK,SAAU;AACpD,cAAI,oBAAoB,MAAM,IAAI,CAAC,UAAU,EAAE,IAAI,KAAK,MAAM,UAAU,KAAK,SAAS,EAAE;AAGxF,gBAAM,WAAW,MAAM,IAAI,cAAc,4BAA4B,UAAU;AAC/E,gBAAM,WAAW,MAAM,SAAS;AAEhC,cAAI,oBAA2B,CAAC;AAGhC,mBAAS,IAAI,GAAG,IAAI,SAAS,QAAQ,KAAK;AACxC,gBAAI;AACJ,kBAAM,QAAQ,OAAO,SAAS,CAAC,EAAE,KAAK;AACtC,kBAAM,cAAc,OAAO,SAAS,CAAC,EAAE,cAAc;AACrD,kBAAM,kBAAkB,eAAe,IAAI;AAG3C,kBAAM,gBAAgB,WAAW,QAAQ,SAAS,CAAC,EAAE,EAAE;AACvD,kBAAM,aAAa,kBAAkB,aAAa,EAAE;AACpD,kBAAM,gBAAgB,kBAAkB,aAAa,EAAE;AAGvD,gBAAI,eAAe,QAAQ,eAAe,GAAG;AAC3C,qCAAuB,QAAQ,cAAc,eAAe,QAAQ,CAAC;AAAA,YACvE,WAAW,QAAQ,iBAAiB;AAClC,sCAAwB,QAAQ,mBAAmB,eAAe,QAAQ,CAAC;AAAA,YAC7E,OAAO;AACL;AAAA,YACF;AAEA,kBAAM,mBAAmB;AAAA,cACvB;AAAA,cACA,MAAM;AAAA,cACN,QAAQ;AAAA,cACR,MAAM;AAAA,YACR;AAEA,kBAAMC,4BAA2B;AAAA,cAC/B,cAAc,OAAO,UAAU;AAAA,cAC/B,kBAAkB;AAAA,YACpB;AACA,8BAAkB,KAAKA,yBAAwB;AAAA,UACjD;AACA,kBAAQ,IAAI,iBAAiB;AAE7B,cAAI;AACF,gBAAI,KAAK,yBAAyB,iBAAiB;AACnD,gBAAI,MAAM,KAAK,qBAAqB,EAAE,UAAU,IAAK,CAAC;AAAA,UACxD,SAAS,KAAK;AACZ,oBAAQ,IAAI,GAAG;AAAA,UACjB;AAAA,QACF;AAEA,YAAI,aAAa,KAAK,gBAAgB,QAAQ;AAAA,UAC5C,MAAM;AAAA,UACN,OAAO;AAAA,QACT,CAAC;AACD,YAAI,aAAa,KAAK,gBAAgB,UAAU;AAGhD,cAAM,sBAAsB,KAAK,gBAAgB,QAAQ;AAAA,UACvD,OAAO;AAAA,UACP,SAAS,MAAM;AACb,4BAAgB,qBAAqB,IAAI;AAAA,UAC3C;AAAA,QACF,CAAC;AAGD,mBAAW,YAAY,mBAAmB;AAC1C,mBAAW,YAAY,UAAU;AACjC,aAAK,YAAY,UAAU;AAC3B,aAAK,MAAM;AAAA,MACb,CAAC;AAAA;AAAA;;;AC3GD,mBAAO;",
  "names": ["init_esm", "init_esm", "SetLineItemDiscountInput"]
}
